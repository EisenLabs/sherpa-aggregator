pub use uni_v3_facet::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod uni_v3_facet {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("uniV3GetTicks"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function { name :
                        ::std::borrow::ToOwned::to_owned("uniV3GetTicks"), inputs :
                        ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("pool"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("contract IUniswapV3Pool")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("tickRange"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Int(24usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("int24")),
                        }], outputs : ::std::vec![::ethers::core::abi::ethabi::Param {
                        name : ::std::borrow::ToOwned::to_owned("ticks"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Array(::std::boxed::Box::new(::ethers::core::abi::ethabi::ParamType::Tuple(::std::vec![::ethers::core::abi::ethabi::ParamType::Uint(128usize),
                        ::ethers::core::abi::ethabi::ParamType::Int(128usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                        ::ethers::core::abi::ethabi::ParamType::Int(24usize)]))),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("struct IUniswapV3Viewer.Tick[]")),
                        }], constant : ::core::option::Option::None, state_mutability :
                        ::ethers::core::abi::ethabi::StateMutability::View, }
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("uniV3PoolParams"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function { name :
                        ::std::borrow::ToOwned::to_owned("uniV3PoolParams"), inputs :
                        ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("pool"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("address")),
                        }], outputs : ::std::vec![::ethers::core::abi::ethabi::Param {
                        name : ::std::string::String::new(), kind :
                        ::ethers::core::abi::ethabi::ParamType::Tuple(::std::vec![::ethers::core::abi::ethabi::ParamType::Address,
                        ::ethers::core::abi::ethabi::ParamType::Int(24usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(24usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(128usize),
                        ::ethers::core::abi::ethabi::ParamType::Address,
                        ::ethers::core::abi::ethabi::ParamType::Array(::std::boxed::Box::new(::ethers::core::abi::ethabi::ParamType::Address))]),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("struct IUniswapV3Viewer.UniV3PoolParamsResponse")),
                        }], constant : ::core::option::Option::None, state_mutability :
                        ::ethers::core::abi::ethabi::StateMutability::View, }
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("uniV3PoolState"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function { name :
                        ::std::borrow::ToOwned::to_owned("uniV3PoolState"), inputs :
                        ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("pool"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("address")),
                        }], outputs : ::std::vec![::ethers::core::abi::ethabi::Param {
                        name : ::std::string::String::new(), kind :
                        ::ethers::core::abi::ethabi::ParamType::Tuple(::std::vec![::ethers::core::abi::ethabi::ParamType::Uint(160usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(32usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(32usize),
                        ::ethers::core::abi::ethabi::ParamType::Int(24usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(16usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(16usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(128usize),
                        ::ethers::core::abi::ethabi::ParamType::Uint(16usize)]),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("struct IUniswapV3Viewer.UniV3PoolStateResponse")),
                        }], constant : ::core::option::Option::None, state_mutability :
                        ::ethers::core::abi::ethabi::StateMutability::View, }
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("uniV3SwapExactInput"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function { name :
                        ::std::borrow::ToOwned::to_owned("uniV3SwapExactInput"), inputs :
                        ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("amountIn"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("uint256")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("path"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Bytes, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("bytes")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("recipient"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("Recipient")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("payer"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("Payer")),
                        }], outputs : ::std::vec![::ethers::core::abi::ethabi::Param {
                        name : ::std::borrow::ToOwned::to_owned("inputToken"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("address")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("outputToken"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Address, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("address")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("amountOut"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("uint256")),
                        }], constant : ::core::option::Option::None, state_mutability :
                        ::ethers::core::abi::ethabi::StateMutability::Payable, }
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("uniswapV3SwapCallback"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function { name :
                        ::std::borrow::ToOwned::to_owned("uniswapV3SwapCallback"), inputs
                        : ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("amount0Delta"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Int(256usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("int256")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("amount1Delta"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Int(256usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("int256")),
                        }, ::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("data"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Bytes, internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("bytes")),
                        }], outputs : ::std::vec![], constant :
                        ::core::option::Option::None, state_mutability :
                        ::ethers::core::abi::ethabi::StateMutability::NonPayable, }
                    ],
                ),
            ]),
            events: ::std::collections::BTreeMap::new(),
            errors: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("GenericError"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::AbiError { name :
                        ::std::borrow::ToOwned::to_owned("GenericError"), inputs :
                        ::std::vec![::ethers::core::abi::ethabi::Param { name :
                        ::std::borrow::ToOwned::to_owned("errorCode"), kind :
                        ::ethers::core::abi::ethabi::ParamType::Uint(256usize),
                        internal_type :
                        ::core::option::Option::Some(::std::borrow::ToOwned::to_owned("uint256")),
                        }], }
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("UnsafeCast"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::AbiError { name :
                        ::std::borrow::ToOwned::to_owned("UnsafeCast"), inputs :
                        ::std::vec![], }
                    ],
                ),
            ]),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static UNIV3FACET_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(
        __abi,
    );
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"`\x80\x80`@R4a\0\x16Wa%g\x90\x81a\0\x1C\x829\xF3[`\0\x80\xFD\xFE`\x80`@R`\x046\x10\x15a\0\x12W`\0\x80\xFD[`\x005`\xE0\x1C\x80c?\x12\xC92\x14a\x18LW\x80cs6\xFA\xF9\x14a\x12\xC1W\x80c\x8F\xC1\xFE\x11\x14a\x0E\x03W\x80c\xAC\xCE\x19%\x14a\x05lWc\xFAF\x1E3\x14a\0SW`\0\x80\xFD[4a\x04\x02W``\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`D5`\x045g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x83\x11a\x04\x02W6`#\x84\x01\x12\x15a\x04\x02W\x82`\x04\x015\x81\x81\x11a\x04\x02W\x83\x01\x90`$\x82\x01\x916\x83\x11a\x04\x02W`\0\x84\x13\x15\x80a\x05_W[a\x05.W\x84`@\x91\x03\x12a\x04\x02W`$\x84\x015\x90\x81\x11a\x04\x02W`D\x91`$a\0\xF4\x92\x86\x01\x01a\x1B\xA8V[\x92\x015s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02Wa\x01\x1D\x83a\"\x17V[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x95\x94\x95\x16`\0R\x7F\x82WZ\xFF\xB1&\x0F\xF4\xD6,\x8D7\x16\xA5Z\xDB\xFBOH4\xD1\x7FL\xC7`\xB6|\xCC\xBC\xB7\xACi` R`\xFF`@`\0 T\x16\x15a\x04\xFDW`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x81\x16`\x04\x83\x01R\x84\x81\x16`$\x83\x01Rb\xFF\xFF\xFF\x93\x90\x93\x16`D\x82\x01R\x91` \x91\x83\x91`d\x91\x83\x91\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x04\xDEW[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF3\x91\x16\x03a\x04\xADW`\0\x84\x13\x15a\x04\x87Ws\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x84\x16\x10[\x15a\x02MWPa\x02K\x93P3\x91a\x1FOV[\0[\x84Q\x91\x93\x92P\x90`j\x11a\x04yWP\x90` a\x02ta\x02\xEB\x93a\x02o\x86a\"\xCDV[a\x1B\xEFV[a\x02}\x85a\"\x17V[`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x94\x85\x16`\x04\x82\x01\x81\x90R\x93\x85\x16`$\x82\x01\x81\x90Rb\xFF\xFF\xFF\x90\x92\x16`D\x82\x01R\x97\x92\x11\x94\x92\x87\x92\x83\x91\x90\x82\x90`d\x82\x01\x90V[\x03\x92\x16Z\xFA\x91\x82\x15a\x04\x0EWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x95`@\x95`\0\x94a\x045W[P`\0\x91a\x03\xD1a\x03La\x03~\x8A\x94\x84\x87\x14a\x04\x1AWd\x01\0\x02v\xA4\x99[\x86\x8CQ\x94\x85\x93\x8E` \x86\x01R``\x85\x01\x90a\x1E\xF1V[\x91\x16\x8C\x83\x01R\x03\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x81\x01\x83R\x82a\x1B-V[\x88Q\x99\x8A\x98\x89\x97\x88\x95\x7F\x12\x8A\xCB\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x87R3`\x04\x88\x01R`$\x87\x01R`D\x86\x01R\x16`d\x84\x01R`\xA0`\x84\x84\x01R`\xA4\x83\x01\x90a\x1E\xF1V[\x03\x93\x16Z\xF1\x80\x15a\x04\x0EWa\x03\xE2W\0[`@\x90\x81=\x83\x11a\x04\x07W[a\x03\xF8\x81\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02W\0[`\0\x80\xFD[P=a\x03\xEEV[`@Q=`\0\x82>=\x90\xFD[s\xFF\xFD\x89c\xEF\xD1\xFCjPd\x88I]\x95\x1DRc\x98\x8D%\x99a\x036V[\x87\x91\x94P\x91a\x03\xD1a\x03La\x03~a\x04f`\0\x96` =` \x11a\x04rW[a\x04^\x81\x83a\x1B-V[\x81\x01\x90a\x1C\x8DV[\x97\x94PPPP\x91a\x03\x18V[P=a\x04TV[\x90\x91a\x02K\x93P3\x91a\x1FOV[`$5\x93Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x81\x16\x90\x82\x16\x10a\x029V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`#`\x04\x82\x01R\xFD[a\x04\xF7\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[8a\x01\xE2V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\t`\x04\x82\x01R\xFD[P`\0`$5\x13\x15a\0\xC9V[4a\x04\x02W`@\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`\x045s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02W`$5\x80`\x02\x0B\x81\x03a\x04\x02W`@Q\x7F\xD0\xC9:|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\r\xC9W[Pa\x06\xF2\x81a\x06\xE5a\x06\xD6`@Q\x7F8P\xC7\xBD\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\x04\x81Ra\x06]\x81a\x1A\xF5V[`@Q\x90a\x06j\x82a\x1B\x11V[`%\x82R\x7FAddress: low-level static call f` \x83\x01R\x7Failed\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`@\x83\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x89\x16a$\x1EV[` \x80\x82Q\x83\x01\x01\x91\x01a\x1D\x83V[PPPPP\x94\x90Pa\x1D\xE7V[\x91a\x06\xFD\x83\x82a\x1D\xFEV[\x92`\x02\x0B\x90`\x02\x0B\x01\x90\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0b\x7F\xFF\xFF\x81\x84\x12\x81\x85\x13\x17a\x08\xA5W\x83\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF2v\x18\x80\x87`\x02\x0B\x12a\r\xC1W[Pb\r\x89\xE8\x80\x91`\x02\x0B\x13a\r\xB9W[P`\x01a\x07\x81\x86\x86a\x1D\xFEV[`\x02\x0B\x01\x91\x82\x12\x90\x82\x13\x17a\x08\xA5W\x81a\x07\x9A\x91a\x1E8V[`\x02\x0B\x91`\x01\x83\x01\x80\x93\x11a\x08\xA5W\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0a\x07\xECa\x07\xD6\x85a\x1C\xB9V[\x94a\x07\xE4`@Q\x96\x87a\x1B-V[\x80\x86Ra\x1C\xB9V[\x016` \x85\x017`\0\x91a\x08\0\x81\x86a\x1E8V[`\x02\x0B`\x08\x1D`\x01\x0B\x95a\x08\x14\x82\x84a\x1E8V[`\x02\x0B`\x08\x1D`\x01\x0B\x96[\x87\x81`\x01\x0B\x13a\n\xD7W`@Q\x7FS9\xC2\x96\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R\x81`\x01\x0B`\x04\x82\x01R` \x81`$\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\n\xA5W[P\x80[a\x08\xD4WPa\x7F\xFF\x81`\x01\x0B\x14a\x08\xA5W`\x01\x90\x81\x0B\x01a\x08\x1FV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x11`\x04R`$`\0\xFD[\x80\x19\x90`\0`\x01\x83\x01\x83\x11a\x08\xA5W`\x01\x86\x93\x01\x82\x16p\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x10\x15a\n\x9AW[h\x01\0\0\0\0\0\0\0\0\x81\x10\x15a\nyW[d\x01\0\0\0\0\x81\x10\x15a\nXW[b\x01\0\0\x81\x10\x15a\n8W[a\x01\0\x81\x10\x15a\n\x17W[`\x10\x81\x10\x15a\t\xF6W[`\x04\x81\x10\x15a\t\xD6W[`\x02\x11\x15a\t\xBAW[`\xFFa\tx\x91\x16\x91`\x01\x83\x1B\x18\x92\x83\x92`\x02\x0B\x85`\x08\x1B`\x02\x0B\x17a\x1D\xE7V[`\x02\x0B\x89`\x02\x0B\x81\x12\x15\x80a\t\xADW[a\t\x93W[Pa\x08\x89V[a\t\xA6a\t\x9F\x89a\x1E\xC4V[\x98\x8Aa\x1C\xD1V[R\x8Aa\t\x8DV[P\x86`\x02\x0B\x81\x13\x15a\t\x88V[\x91P`\xFF\x91\x82`\x01\x81\x83\x16\x01\x11a\x08\xA5W\x85\x92\x16`\x01\x01a\tXV[\x90\x92P`\x02\x1C`\xFF\x80`\x02\x81\x86\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x02\x01\x90a\tOV[\x90\x92P`\x04\x1C`\xFF\x92\x83`\x04\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x04\x01\x90a\tEV[\x90\x92P`\x08\x1C`\xFF\x92\x83`\x08\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x08\x01\x90a\t;V[\x90\x92P`\x10\x90\x81\x1C\x90`\xFF\x80\x82\x81\x87\x16\x01\x11a\x08\xA5W\x87\x94\x16\x01\x90a\t0V[\x90\x92P` \x1C`\xFF\x92\x83` \x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16` \x01\x90a\t$V[\x90\x92P`@\x1C`\xFF\x92\x83`@\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`@\x01\x90a\t\x16V[`\x80\x91P\x81\x1Ca\t\x04V[\x90P` \x81=` \x11a\n\xCFW[\x81a\n\xC0` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02WQ\x89a\x08\x86V[=\x91Pa\n\xB3V[P\x84\x84a\n\xE3\x81a\x1C\xB9V[\x92a\n\xF1`@Q\x94\x85a\x1B-V[\x81\x84R\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0a\x0B\x1E\x83a\x1C\xB9V[\x01`\0[\x81\x81\x10a\r=WPP`\0[\x82\x81\x10a\x0B\xBFW\x84`@Q\x80\x91` \x82\x01` \x83R\x81Q\x80\x91R` `@\x84\x01\x92\x01\x90`\0[\x81\x81\x10a\x0BbWPPP\x03\x90\xF3[\x91\x93P\x91` `\xA0`\x01\x92\x86Qo\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16\x82R\x83\x81\x01Q`\x0F\x0B\x84\x83\x01R`@\x81\x01Q`@\x83\x01R``\x80\x82\x01Q\x90\x83\x01R`\x80\x80\x91\x01Q`\x02\x0B\x90\x82\x01R\x01\x94\x01\x91\x01\x91\x84\x93\x92a\x0BTV[a\x0B\xC9\x81\x85a\x1C\xD1V[Q`\x02\x0B\x90`@Q\x91\x7F\xF3\r\xBA\x93\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R`\x04\x83\x01Ra\x01\0\x80\x83`$\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x88\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x80`\0\x92`\0\x94a\x0C\xAFW[Pa\x0C\xAA\x95Po\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x0CQ\x86\x8Ca\x1C\xD1V[Q\x91\x16\x90R` a\x0Cb\x85\x8Ba\x1C\xD1V[Q\x01\x90`\x0F\x0B\x90R`@a\x0Cv\x84\x8Aa\x1C\xD1V[Q\x01R``a\x0C\x85\x83\x89a\x1C\xD1V[Q\x01Ra\x0C\x92\x81\x86a\x1C\xD1V[Q`\x02\x0B`\x80a\x0C\xA2\x83\x89a\x1C\xD1V[Q\x01Ra\x1E\xC4V[a\x0B.V[\x93PPPP\x82\x81=\x83\x11a\r6W[a\x0C\xC8\x81\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x0C\xD9\x82a\x1CpV[` \x83\x01Q\x90\x81`\x0F\x0B\x82\x03a\x04\x02W`@\x84\x01Q``\x85\x01Q\x91`\x80\x86\x01Q\x80`\x06\x0B\x03a\x04\x02Wa\r+`\xE0\x87a\r\x17`\xA0a\x0C\xAA\x9A\x01a\x1D5V[Pa\r$`\xC0\x82\x01a\x1DeV[P\x01a\x1DvV[P\x92\x90\x91\x92\x8Aa\x0C0V[P=a\x0C\xBEV[`@Q\x90`\xA0\x82\x01\x91\x80\x83\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x84\x11\x17a\r\x8AW` \x92`@R`\0\x81R`\0\x83\x82\x01R`\0`@\x82\x01R`\0``\x82\x01R`\0`\x80\x82\x01R\x82\x82\x89\x01\x01R\x01a\x0B\"V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`A`\x04R`$`\0\xFD[\x93P\x86a\x07tV[\x95P\x87a\x07dV[\x90P` \x81=` \x11a\r\xFBW[\x81a\r\xE4` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\r\xF5\x90a\x1CbV[\x83a\x06\x1CV[=\x91Pa\r\xD7V[4a\x04\x02W` \x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02Wa\x0E:a\x1A\xD2V[a\x0EBa\x1C\x1CV[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x0E`a\x1C\x1CV[\x91\x16\x80\x82R`@Q\x7F\xD0\xC9:|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x12\x87W[P`\x02\x0B` \x83\x01R`@Q\x7F\xDD\xCA?C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EW`\0\x90a\x12FW[b\xFF\xFF\xFF\x91P\x16`@\x83\x01R`@Q\x7Fp\xCFuJ\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EW`\0\x90a\x11\xFDW[o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16``\x84\x01RP`@Q\x7F\xC4Z\x01U\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x91`\0\x91a\x11\xDEW[P\x16`\x80\x83\x01R`@Qa\x0F\xB0\x81a\x1B\x11V[`\x02\x81R`@6` \x83\x017`\xA0\x83\x01R`@Q\x7F\r\xFE\x16\x81\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x11\xBFW[P`\xA0\x83\x01Q\x91\x82Q\x15a\x11qW`\x04\x92` s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x94\x16\x91\x01R`@Q\x92\x83\x80\x92\x7F\xD2\x12 \xA7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x82RZ\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x11\xA0W[P`\xA0\x82\x01Q\x90\x81Q`\x01\x10\x15a\x11qWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`@\x91\x16\x91\x01R`@Q\x80\x91` \x82R`\xA0`\xE0\x83\x01\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16` \x85\x01R` \x81\x01Q`\x02\x0B`@\x85\x01Rb\xFF\xFF\xFF`@\x82\x01Q\x16``\x85\x01Ro\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF``\x82\x01Q\x16`\x80\x85\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x80\x82\x01Q\x16\x82\x85\x01R\x01Q\x90`\xC0\x80\x84\x01R\x81Q\x80\x91R` a\x01\0\x84\x01\x92\x01\x90`\0[\x81\x81\x10a\x11BWPPP\x03\x90\xF3[\x82Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x84R\x85\x94P` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x114V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[a\x11\xB9\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x82a\x10hV[a\x11\xD8\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x83a\x0F\xFFV[a\x11\xF7\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x84a\x0F\x9DV[P` \x81=` \x11a\x12>W[\x81a\x12\x17` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x129o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x91a\x1CpV[a\x0F2V[=\x91Pa\x12\nV[P` \x81=` \x11a\x12\x7FW[\x81a\x12`` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02WQb\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02Wb\xFF\xFF\xFF\x90a\x0E\xE9V[=\x91Pa\x12SV[\x90P` \x81=` \x11a\x12\xB9W[\x81a\x12\xA2` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x12\xB3\x90a\x1CbV[\x83a\x0E\xA3V[=\x91Pa\x12\x95V[`\x80\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`\x045`$5g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\x04\x02Wa\x13\x0E\x906\x90`\x04\x01a\x1B\xA8V[`D5s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x80\x82\x03a\x04\x02W`d5\x93s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x85\x16\x92\x83\x86\x03a\x04\x02W\x81\x95Pa\x13`\x85Q\x86a\"\xAFV[\x93`\x01\x81\x03a\x18\x0EWP3[\x92`\x01\x81\x03a\x17}WPP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x003\x91[\x14a\x17kW[\x90[\x83Q\x94`?\x86\x10a\x17:W` a\x14X`@Q\x92`\x1F\x88\x01Q`\x1F\x85\x01R`?\x88\x01Q`?\x85\x01R`?\x84R``\x84\x01`@R`j\x89\x10\x15`\0\x14a\x174W0[a\x13\xED\x85a\"\x17V[`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x85\x81\x16`\x04\x83\x01R\x80\x85\x16`$\x83\x01Rb\xFF\xFF\xFF\x90\x92\x16`D\x82\x01R\x92\x99\x93\x97\x92\x96\x87\x92\x91\x83\x91\x82\x90`d\x82\x01\x90V[\x03\x92\x16Z\xFA\x93\x84\x15a\x04\x0EW`\0\x94a\x17\x13W[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x16\x10`\0\x14a\x16\xF8Wd\x01\0\x02v\xA4\x95[`@Q\x91\x82\x91` \x83\x01`@\x90R``\x83\x01a\x14\xC6\x91a\x1E\xF1V[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`@\x83\x01R\x03\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x81\x01\x82Ra\x15\x12\x90\x82a\x1B-V[`@Q\x95\x86\x93\x84\x93\x7F\x12\x8A\xCB\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\x04\x85\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x89\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x88\x16\x10`$\x85\x01R`D\x84\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`d\x83\x01R`\x84\x82\x01`\xA0\x90R`\xA4\x82\x01a\x15\xC1\x91a\x1E\xF1V[\x03\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x91\x81Z`@\x94`\0\x91\xF1\x92\x83\x15a\x04\x0EW`\0\x92`\0\x94a\x16\xB7W[P\x91`j\x93\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80a\x16&\x95\x16\x91\x16\x10`\0\x14a\x16\xB0WPa\x1B\xEFV[\x94\x10a\x16=W0\x90a\x167\x84a\"\xCDV[\x90a\x13\xA3V[P\x90\x80a\x16K\x91Q\x90a\"\xBEV[\x91\x80\x15a\x16\x7FWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF``\x93\x81`@Q\x94\x16\x84R\x16` \x83\x01R`@\x82\x01R\xF3[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`0`\x04\x82\x01R\xFD[\x90Pa\x1B\xEFV[\x93P\x90\x91P`@\x83=`@\x11a\x16\xF0W[\x81a\x16\xD5`@\x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02W\x82Q` \x90\x93\x01Q\x92\x91\x90a\x16&a\x15\xF5V[=\x91Pa\x16\xC8V[s\xFF\xFD\x89c\xEF\xD1\xFCjPd\x88I]\x95\x1DRc\x98\x8D%\x95a\x14\xABV[a\x17-\x91\x94P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x92\x8Ba\x14lV[\x85a\x13\xE4V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`2`\x04\x82\x01R\xFD[\x93Pa\x17w0\x83a!\xA9V[\x93a\x13\xA1V[`\x02\x81\x03a\x17\xAFWPP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x91a\x13\x9BV[a\x17\xB8\x90a!\xC6V[\x15a\x17\xE6WP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x003\x91a\x13\x9BV[\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x91a\x13\x9BV[`\x02\x03a\x18\x1BW0a\x13lV[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`&`\x04\x82\x01R\xFD[4a\x04\x02W` \x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02Ws\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x18\x98a\x1A\xD2V[a\x18\xA0a\x1C\xE5V[P` a\x18\xABa\x1C\xE5V[\x91c\xFF\xFF\xFF\xFFB\x16\x82\x84\x01R\x83a\xFF\xFF\x80\x80c\xFF\xFF\xFF\xFFa\x19ma\x19_`@Q\x7F8P\xC7\xBD\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8A\x82\x01R`\x04\x81Ra\x18\xFD\x81a\x1A\xF5V[`@Q\x90a\x19\n\x82a\x1B\x11V[`%\x82R\x7FAddress: low-level static call f\x8B\x83\x01R\x7Failed\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`@\x83\x01R\x89a$\x1EV[\x88\x80\x82Q\x83\x01\x01\x91\x01a\x1D\x83V[P\x98\x94\x98\x97\x92\x95\x90\x91\x93\x97\x16`@\x8D\x01R\x16`\xE0\x8B\x01R\x16`\xA0\x89\x01R\x16`\x80\x87\x01R`\x02\x0B``\x86\x01R\x16\x83R`\x04`@Q\x80\x95\x81\x93\x7F\x1Ahe\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R\x16Z\xFA\x91\x82\x15a\x04\x0EW`\0\x92a\x1A\x83W[Po\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x01\0\x92\x16`\xC0\x82\x01Ra\xFF\xFF`\xE0`@Q\x92s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16\x84Rc\xFF\xFF\xFF\xFF` \x82\x01Q\x16` \x85\x01Rc\xFF\xFF\xFF\xFF`@\x82\x01Q\x16`@\x85\x01R``\x81\x01Q`\x02\x0B``\x85\x01R\x82`\x80\x82\x01Q\x16`\x80\x85\x01R\x82`\xA0\x82\x01Q\x16`\xA0\x85\x01Ro\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\xC0\x82\x01Q\x16`\xC0\x85\x01R\x01Q\x16`\xE0\x82\x01R\xF3[\x91P` \x82=` \x11a\x1A\xCAW[\x81a\x1A\x9E` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wo\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x1A\xC3a\x01\0\x93a\x1CpV[\x92Pa\x19\xD9V[=\x91Pa\x1A\x91V[`\x045\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[`@\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[``\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[\x90`\x1F\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x91\x01\x16\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`\x1F\x01\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x16` \x01\x90V[\x81`\x1F\x82\x01\x12\x15a\x04\x02W\x805\x90a\x1B\xBF\x82a\x1BnV[\x92a\x1B\xCD`@Q\x94\x85a\x1B-V[\x82\x84R` \x83\x83\x01\x01\x11a\x04\x02W\x81`\0\x92` \x80\x93\x01\x83\x86\x017\x83\x01\x01R\x90V[\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x14a\x08\xA5W`\0\x03\x90V[`@Q\x90`\xC0\x82\x01\x82\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@R```\xA0\x83`\0\x81R`\0` \x82\x01R`\0`@\x82\x01R`\0\x83\x82\x01R`\0`\x80\x82\x01R\x01RV[Q\x90\x81`\x02\x0B\x82\x03a\x04\x02WV[Q\x90o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[\x90\x81` \x91\x03\x12a\x04\x02WQs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02W\x90V[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`\x05\x1B` \x01\x90V[\x80Q\x82\x10\x15a\x11qW` \x91`\x05\x1B\x01\x01\x90V[`@Q\x90a\x01\0\x82\x01\x82\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@R\x81`\xE0`\0\x91\x82\x81R\x82` \x82\x01R\x82`@\x82\x01R\x82``\x82\x01R\x82`\x80\x82\x01R\x82`\xA0\x82\x01R\x82`\xC0\x82\x01R\x01RV[Q\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90a\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90c\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90\x81\x15\x15\x82\x03a\x04\x02WV[\x90\x81`\xE0\x91\x03\x12a\x04\x02Wa\x1D\x97\x81a\x1D5V[\x91a\x1D\xA4` \x83\x01a\x1CbV[\x91a\x1D\xB1`@\x82\x01a\x1DVV[\x91a\x1D\xBE``\x83\x01a\x1DVV[\x91a\x1D\xCB`\x80\x82\x01a\x1DVV[\x91a\x1D\xE4`\xC0a\x1D\xDD`\xA0\x85\x01a\x1DeV[\x93\x01a\x1DvV[\x90V[\x90`\x02\x0B\x90`\x02\x0B\x02\x90\x81`\x02\x0B\x91\x82\x03a\x08\xA5WV[\x90`\x02\x0B\x90`\x02\x0B\x03\x90b\x7F\xFF\xFF\x82\x13\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0\x83\x12\x17a\x08\xA5WV[`\x02\x0B\x90`\x02\x0B\x90\x81\x15a\x1E\x95W\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x14\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0\x82\x14\x16a\x08\xA5W\x05\x90V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x12`\x04R`$`\0\xFD[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x14a\x08\xA5W`\x01\x01\x90V[\x91\x90\x82Q\x92\x83\x82R`\0[\x84\x81\x10a\x1F;WPP\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0`\x1F\x84`\0` \x80\x96\x97\x86\x01\x01R\x01\x16\x01\x01\x90V[` \x81\x83\x01\x81\x01Q\x84\x83\x01\x82\x01R\x01a\x1E\xFCV[\x92\x91\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x160\x03a\x1F}WPPa\x1F{\x92a\x1F\x91V[V[a\x1F\x8Aa\x1F{\x95\x94a#\xD3V[\x16\x92a eV[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x900\x82\x14a `Wa\x1F\xB9\x81a!\xC6V[\x15a\x1F\xDDWP`\0\x80\x80\x93Z\x93Z\xF1\x15a\x1F\xCFWV[c\xB1-\x13\xEB`\0R`\x04`\x1C\xFD[\x82` \x92\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x10\x95\x14a NW[`\x14R`4R`D`\0\x93\x84\x80\x93o\xA9\x05\x9C\xBB\0\0\0\0\0\0\0\0\0\0\0\0\x82RZ\xF1=\x15`\x01\x83Q\x14\x17\x16\x15a AW`4RV[c\x90\xB8\xEC\x18\x90R`\x04`\x1C\xFD[\x90Pa Z0\x83a!zV[\x90a \x0BV[PPPV[\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x81\x16\x91\x16\x81\x81\x14a \x96Wa \x90\x83a!\xC6V[\x15a \x9CW[PPPPV[a \xA8a \xAE\x94a#\xD3V[\x92a \xB7V[8\x80\x80\x80a \x96V[\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x80\x92\x16\x92\x16\x82\x81\x14a!sW\x81\x7Fj+3\x91\\\x87\xEB\xBD.zGR\x0F\xE4\xAA\xA6\xF0\xE1\x8E\xF6\xBD\xEB\xD6I\x15\xD7\xAE\xCE\xD0\x8DD\x81T\x16\x93\x84;\x15a\x04\x02W`\0\x94\x83\x86\x92`\x84\x95`@Q\x99\x8A\x98\x89\x97\x7F6\xC7\x85\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x89R`\x04\x89\x01R`$\x88\x01R\x16`D\x86\x01R\x16`d\x84\x01RZ\xF1\x80\x15a\x04\x0EWa!_WPV[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`@RV[PPPPPV[`$`\x10` \x93\x92\x84\x93`\x14Rop\xA0\x821\0\0\0\0\0\0\0\0\0\0\0\0`\0RZ\xFA`\x1F=\x11\x16` Q\x02\x90V[a!\xB2\x81a!\xC6V[\x15a!\xBCWP1\x90V[\x90a\x1D\xE4\x91a!zV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16s\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\x81\x14\x90\x81\x15a\"\x0BW[\x81\x15a\"\x05WP\x90V[\x90P\x15\x90V[a\x10\x10\x81\x14\x91Pa!\xFBV[\x90\x81Qa\"$\x81\x84a\"\xAFV[\x92`(\x82\x10a\"~W`(\x81\x01Q\x91`+\x81\x10a\"MWa\"J\x90`+\x83\x01Q\x92a\"\xBEV[\x92V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`5`\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`8`\x04\x82\x01R\xFD[\x90`\x14\x11a\"~W`\x14\x01Q\x90V[\x90`?\x11a\"~W`?\x01Q\x90V[\x80Q\x90\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xD5\x91\x82\x81\x01\x92\x81\x84\x11a\x08\xA5W\x83\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF4\x83\x01\x10a#\xA2W`+\x82\x10a#\xA2W\x81\x83Q\x10a\x17:W`+\x82\x14a#qW`\x1F\x84\x16\x80\x15`\x05\x1B\x01\x83\x01\x91\x82\x01\x01`+\x82\x01\x91[\x81\x81\x10a#aWPPPRV[\x82Q\x81R` \x92\x83\x01\x92\x01a#TV[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`4`\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`3`\x04\x82\x01R\xFD[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x81\x81\x11a#\xF4W\x16\x90V[`\x04`@Q\x7F\xC4\xBD\x89\xA9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R\xFD[`\0\x80a\x1D\xE4\x94\x93` \x81Q\x91\x01\x84Z\xFA=\x15a$]W=\x91a$@\x83a\x1BnV[\x92a$N`@Q\x94\x85a\x1B-V[\x83R=`\0` \x85\x01>a$aV[``\x91[\x91\x92\x90\x15a$\xDCWP\x81Q\x15a$uWP\x90V[;\x15a$~W\x90V[`d`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x1D`$\x82\x01R\x7FAddress: call to non-contract\0\0\0`D\x82\x01R\xFD[\x82Q\x90\x91P\x15a$\xEFWP\x80Q\x90` \x01\xFD[a%-\x90`@Q\x91\x82\x91\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R` `\x04\x84\x01R`$\x83\x01\x90a\x1E\xF1V[\x03\x90\xFD\xFE\xA2dipfsX\"\x12 \x13\xC7\xA03\xB0w\xE6\xEA\xAE\xFCe\xD7}\xF0/c\x9E\xDD\xED\xACp6\x80!\x87\xB4\xC0[\xEA\x91\xD4\xD9dsolcC\0\x08\x13\x003";
    /// The bytecode of the contract.
    pub static UNIV3FACET_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"`\x80`@R`\x046\x10\x15a\0\x12W`\0\x80\xFD[`\x005`\xE0\x1C\x80c?\x12\xC92\x14a\x18LW\x80cs6\xFA\xF9\x14a\x12\xC1W\x80c\x8F\xC1\xFE\x11\x14a\x0E\x03W\x80c\xAC\xCE\x19%\x14a\x05lWc\xFAF\x1E3\x14a\0SW`\0\x80\xFD[4a\x04\x02W``\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`D5`\x045g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x83\x11a\x04\x02W6`#\x84\x01\x12\x15a\x04\x02W\x82`\x04\x015\x81\x81\x11a\x04\x02W\x83\x01\x90`$\x82\x01\x916\x83\x11a\x04\x02W`\0\x84\x13\x15\x80a\x05_W[a\x05.W\x84`@\x91\x03\x12a\x04\x02W`$\x84\x015\x90\x81\x11a\x04\x02W`D\x91`$a\0\xF4\x92\x86\x01\x01a\x1B\xA8V[\x92\x015s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02Wa\x01\x1D\x83a\"\x17V[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x95\x94\x95\x16`\0R\x7F\x82WZ\xFF\xB1&\x0F\xF4\xD6,\x8D7\x16\xA5Z\xDB\xFBOH4\xD1\x7FL\xC7`\xB6|\xCC\xBC\xB7\xACi` R`\xFF`@`\0 T\x16\x15a\x04\xFDW`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x81\x16`\x04\x83\x01R\x84\x81\x16`$\x83\x01Rb\xFF\xFF\xFF\x93\x90\x93\x16`D\x82\x01R\x91` \x91\x83\x91`d\x91\x83\x91\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x04\xDEW[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF3\x91\x16\x03a\x04\xADW`\0\x84\x13\x15a\x04\x87Ws\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x84\x16\x10[\x15a\x02MWPa\x02K\x93P3\x91a\x1FOV[\0[\x84Q\x91\x93\x92P\x90`j\x11a\x04yWP\x90` a\x02ta\x02\xEB\x93a\x02o\x86a\"\xCDV[a\x1B\xEFV[a\x02}\x85a\"\x17V[`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x94\x85\x16`\x04\x82\x01\x81\x90R\x93\x85\x16`$\x82\x01\x81\x90Rb\xFF\xFF\xFF\x90\x92\x16`D\x82\x01R\x97\x92\x11\x94\x92\x87\x92\x83\x91\x90\x82\x90`d\x82\x01\x90V[\x03\x92\x16Z\xFA\x91\x82\x15a\x04\x0EWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x95`@\x95`\0\x94a\x045W[P`\0\x91a\x03\xD1a\x03La\x03~\x8A\x94\x84\x87\x14a\x04\x1AWd\x01\0\x02v\xA4\x99[\x86\x8CQ\x94\x85\x93\x8E` \x86\x01R``\x85\x01\x90a\x1E\xF1V[\x91\x16\x8C\x83\x01R\x03\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x81\x01\x83R\x82a\x1B-V[\x88Q\x99\x8A\x98\x89\x97\x88\x95\x7F\x12\x8A\xCB\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x87R3`\x04\x88\x01R`$\x87\x01R`D\x86\x01R\x16`d\x84\x01R`\xA0`\x84\x84\x01R`\xA4\x83\x01\x90a\x1E\xF1V[\x03\x93\x16Z\xF1\x80\x15a\x04\x0EWa\x03\xE2W\0[`@\x90\x81=\x83\x11a\x04\x07W[a\x03\xF8\x81\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02W\0[`\0\x80\xFD[P=a\x03\xEEV[`@Q=`\0\x82>=\x90\xFD[s\xFF\xFD\x89c\xEF\xD1\xFCjPd\x88I]\x95\x1DRc\x98\x8D%\x99a\x036V[\x87\x91\x94P\x91a\x03\xD1a\x03La\x03~a\x04f`\0\x96` =` \x11a\x04rW[a\x04^\x81\x83a\x1B-V[\x81\x01\x90a\x1C\x8DV[\x97\x94PPPP\x91a\x03\x18V[P=a\x04TV[\x90\x91a\x02K\x93P3\x91a\x1FOV[`$5\x93Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x83\x81\x16\x90\x82\x16\x10a\x029V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`#`\x04\x82\x01R\xFD[a\x04\xF7\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[8a\x01\xE2V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\t`\x04\x82\x01R\xFD[P`\0`$5\x13\x15a\0\xC9V[4a\x04\x02W`@\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`\x045s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02W`$5\x80`\x02\x0B\x81\x03a\x04\x02W`@Q\x7F\xD0\xC9:|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\r\xC9W[Pa\x06\xF2\x81a\x06\xE5a\x06\xD6`@Q\x7F8P\xC7\xBD\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0` \x82\x01R`\x04\x81Ra\x06]\x81a\x1A\xF5V[`@Q\x90a\x06j\x82a\x1B\x11V[`%\x82R\x7FAddress: low-level static call f` \x83\x01R\x7Failed\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`@\x83\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x89\x16a$\x1EV[` \x80\x82Q\x83\x01\x01\x91\x01a\x1D\x83V[PPPPP\x94\x90Pa\x1D\xE7V[\x91a\x06\xFD\x83\x82a\x1D\xFEV[\x92`\x02\x0B\x90`\x02\x0B\x01\x90\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0b\x7F\xFF\xFF\x81\x84\x12\x81\x85\x13\x17a\x08\xA5W\x83\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF2v\x18\x80\x87`\x02\x0B\x12a\r\xC1W[Pb\r\x89\xE8\x80\x91`\x02\x0B\x13a\r\xB9W[P`\x01a\x07\x81\x86\x86a\x1D\xFEV[`\x02\x0B\x01\x91\x82\x12\x90\x82\x13\x17a\x08\xA5W\x81a\x07\x9A\x91a\x1E8V[`\x02\x0B\x91`\x01\x83\x01\x80\x93\x11a\x08\xA5W\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0a\x07\xECa\x07\xD6\x85a\x1C\xB9V[\x94a\x07\xE4`@Q\x96\x87a\x1B-V[\x80\x86Ra\x1C\xB9V[\x016` \x85\x017`\0\x91a\x08\0\x81\x86a\x1E8V[`\x02\x0B`\x08\x1D`\x01\x0B\x95a\x08\x14\x82\x84a\x1E8V[`\x02\x0B`\x08\x1D`\x01\x0B\x96[\x87\x81`\x01\x0B\x13a\n\xD7W`@Q\x7FS9\xC2\x96\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R\x81`\x01\x0B`\x04\x82\x01R` \x81`$\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\n\xA5W[P\x80[a\x08\xD4WPa\x7F\xFF\x81`\x01\x0B\x14a\x08\xA5W`\x01\x90\x81\x0B\x01a\x08\x1FV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x11`\x04R`$`\0\xFD[\x80\x19\x90`\0`\x01\x83\x01\x83\x11a\x08\xA5W`\x01\x86\x93\x01\x82\x16p\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x10\x15a\n\x9AW[h\x01\0\0\0\0\0\0\0\0\x81\x10\x15a\nyW[d\x01\0\0\0\0\x81\x10\x15a\nXW[b\x01\0\0\x81\x10\x15a\n8W[a\x01\0\x81\x10\x15a\n\x17W[`\x10\x81\x10\x15a\t\xF6W[`\x04\x81\x10\x15a\t\xD6W[`\x02\x11\x15a\t\xBAW[`\xFFa\tx\x91\x16\x91`\x01\x83\x1B\x18\x92\x83\x92`\x02\x0B\x85`\x08\x1B`\x02\x0B\x17a\x1D\xE7V[`\x02\x0B\x89`\x02\x0B\x81\x12\x15\x80a\t\xADW[a\t\x93W[Pa\x08\x89V[a\t\xA6a\t\x9F\x89a\x1E\xC4V[\x98\x8Aa\x1C\xD1V[R\x8Aa\t\x8DV[P\x86`\x02\x0B\x81\x13\x15a\t\x88V[\x91P`\xFF\x91\x82`\x01\x81\x83\x16\x01\x11a\x08\xA5W\x85\x92\x16`\x01\x01a\tXV[\x90\x92P`\x02\x1C`\xFF\x80`\x02\x81\x86\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x02\x01\x90a\tOV[\x90\x92P`\x04\x1C`\xFF\x92\x83`\x04\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x04\x01\x90a\tEV[\x90\x92P`\x08\x1C`\xFF\x92\x83`\x08\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`\x08\x01\x90a\t;V[\x90\x92P`\x10\x90\x81\x1C\x90`\xFF\x80\x82\x81\x87\x16\x01\x11a\x08\xA5W\x87\x94\x16\x01\x90a\t0V[\x90\x92P` \x1C`\xFF\x92\x83` \x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16` \x01\x90a\t$V[\x90\x92P`@\x1C`\xFF\x92\x83`@\x81\x83\x16\x01\x11a\x08\xA5W\x86\x93\x16`@\x01\x90a\t\x16V[`\x80\x91P\x81\x1Ca\t\x04V[\x90P` \x81=` \x11a\n\xCFW[\x81a\n\xC0` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02WQ\x89a\x08\x86V[=\x91Pa\n\xB3V[P\x84\x84a\n\xE3\x81a\x1C\xB9V[\x92a\n\xF1`@Q\x94\x85a\x1B-V[\x81\x84R\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0a\x0B\x1E\x83a\x1C\xB9V[\x01`\0[\x81\x81\x10a\r=WPP`\0[\x82\x81\x10a\x0B\xBFW\x84`@Q\x80\x91` \x82\x01` \x83R\x81Q\x80\x91R` `@\x84\x01\x92\x01\x90`\0[\x81\x81\x10a\x0BbWPPP\x03\x90\xF3[\x91\x93P\x91` `\xA0`\x01\x92\x86Qo\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16\x82R\x83\x81\x01Q`\x0F\x0B\x84\x83\x01R`@\x81\x01Q`@\x83\x01R``\x80\x82\x01Q\x90\x83\x01R`\x80\x80\x91\x01Q`\x02\x0B\x90\x82\x01R\x01\x94\x01\x91\x01\x91\x84\x93\x92a\x0BTV[a\x0B\xC9\x81\x85a\x1C\xD1V[Q`\x02\x0B\x90`@Q\x91\x7F\xF3\r\xBA\x93\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R`\x04\x83\x01Ra\x01\0\x80\x83`$\x81s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x88\x16Z\xFA\x90\x81\x15a\x04\x0EW`\0\x80`\0\x92`\0\x94a\x0C\xAFW[Pa\x0C\xAA\x95Po\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x0CQ\x86\x8Ca\x1C\xD1V[Q\x91\x16\x90R` a\x0Cb\x85\x8Ba\x1C\xD1V[Q\x01\x90`\x0F\x0B\x90R`@a\x0Cv\x84\x8Aa\x1C\xD1V[Q\x01R``a\x0C\x85\x83\x89a\x1C\xD1V[Q\x01Ra\x0C\x92\x81\x86a\x1C\xD1V[Q`\x02\x0B`\x80a\x0C\xA2\x83\x89a\x1C\xD1V[Q\x01Ra\x1E\xC4V[a\x0B.V[\x93PPPP\x82\x81=\x83\x11a\r6W[a\x0C\xC8\x81\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x0C\xD9\x82a\x1CpV[` \x83\x01Q\x90\x81`\x0F\x0B\x82\x03a\x04\x02W`@\x84\x01Q``\x85\x01Q\x91`\x80\x86\x01Q\x80`\x06\x0B\x03a\x04\x02Wa\r+`\xE0\x87a\r\x17`\xA0a\x0C\xAA\x9A\x01a\x1D5V[Pa\r$`\xC0\x82\x01a\x1DeV[P\x01a\x1DvV[P\x92\x90\x91\x92\x8Aa\x0C0V[P=a\x0C\xBEV[`@Q\x90`\xA0\x82\x01\x91\x80\x83\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x84\x11\x17a\r\x8AW` \x92`@R`\0\x81R`\0\x83\x82\x01R`\0`@\x82\x01R`\0``\x82\x01R`\0`\x80\x82\x01R\x82\x82\x89\x01\x01R\x01a\x0B\"V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`A`\x04R`$`\0\xFD[\x93P\x86a\x07tV[\x95P\x87a\x07dV[\x90P` \x81=` \x11a\r\xFBW[\x81a\r\xE4` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\r\xF5\x90a\x1CbV[\x83a\x06\x1CV[=\x91Pa\r\xD7V[4a\x04\x02W` \x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02Wa\x0E:a\x1A\xD2V[a\x0EBa\x1C\x1CV[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x0E`a\x1C\x1CV[\x91\x16\x80\x82R`@Q\x7F\xD0\xC9:|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x12\x87W[P`\x02\x0B` \x83\x01R`@Q\x7F\xDD\xCA?C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EW`\0\x90a\x12FW[b\xFF\xFF\xFF\x91P\x16`@\x83\x01R`@Q\x7Fp\xCFuJ\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EW`\0\x90a\x11\xFDW[o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16``\x84\x01RP`@Q\x7F\xC4Z\x01U\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x80\x15a\x04\x0EWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x91`\0\x91a\x11\xDEW[P\x16`\x80\x83\x01R`@Qa\x0F\xB0\x81a\x1B\x11V[`\x02\x81R`@6` \x83\x017`\xA0\x83\x01R`@Q\x7F\r\xFE\x16\x81\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` \x81`\x04\x81\x85Z\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x11\xBFW[P`\xA0\x83\x01Q\x91\x82Q\x15a\x11qW`\x04\x92` s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x94\x16\x91\x01R`@Q\x92\x83\x80\x92\x7F\xD2\x12 \xA7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x82RZ\xFA\x90\x81\x15a\x04\x0EW`\0\x91a\x11\xA0W[P`\xA0\x82\x01Q\x90\x81Q`\x01\x10\x15a\x11qWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`@\x91\x16\x91\x01R`@Q\x80\x91` \x82R`\xA0`\xE0\x83\x01\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16` \x85\x01R` \x81\x01Q`\x02\x0B`@\x85\x01Rb\xFF\xFF\xFF`@\x82\x01Q\x16``\x85\x01Ro\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF``\x82\x01Q\x16`\x80\x85\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x80\x82\x01Q\x16\x82\x85\x01R\x01Q\x90`\xC0\x80\x84\x01R\x81Q\x80\x91R` a\x01\0\x84\x01\x92\x01\x90`\0[\x81\x81\x10a\x11BWPPP\x03\x90\xF3[\x82Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x84R\x85\x94P` \x93\x84\x01\x93\x90\x92\x01\x91`\x01\x01a\x114V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[a\x11\xB9\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x82a\x10hV[a\x11\xD8\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x83a\x0F\xFFV[a\x11\xF7\x91P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x84a\x0F\x9DV[P` \x81=` \x11a\x12>W[\x81a\x12\x17` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x129o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x91a\x1CpV[a\x0F2V[=\x91Pa\x12\nV[P` \x81=` \x11a\x12\x7FW[\x81a\x12`` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02WQb\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02Wb\xFF\xFF\xFF\x90a\x0E\xE9V[=\x91Pa\x12SV[\x90P` \x81=` \x11a\x12\xB9W[\x81a\x12\xA2` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wa\x12\xB3\x90a\x1CbV[\x83a\x0E\xA3V[=\x91Pa\x12\x95V[`\x80\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02W`\x045`$5g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\x04\x02Wa\x13\x0E\x906\x90`\x04\x01a\x1B\xA8V[`D5s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x80\x82\x03a\x04\x02W`d5\x93s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x85\x16\x92\x83\x86\x03a\x04\x02W\x81\x95Pa\x13`\x85Q\x86a\"\xAFV[\x93`\x01\x81\x03a\x18\x0EWP3[\x92`\x01\x81\x03a\x17}WPP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x003\x91[\x14a\x17kW[\x90[\x83Q\x94`?\x86\x10a\x17:W` a\x14X`@Q\x92`\x1F\x88\x01Q`\x1F\x85\x01R`?\x88\x01Q`?\x85\x01R`?\x84R``\x84\x01`@R`j\x89\x10\x15`\0\x14a\x174W0[a\x13\xED\x85a\"\x17V[`@Q\x7F\x16\x98\xEE\x82\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x85\x81\x16`\x04\x83\x01R\x80\x85\x16`$\x83\x01Rb\xFF\xFF\xFF\x90\x92\x16`D\x82\x01R\x92\x99\x93\x97\x92\x96\x87\x92\x91\x83\x91\x82\x90`d\x82\x01\x90V[\x03\x92\x16Z\xFA\x93\x84\x15a\x04\x0EW`\0\x94a\x17\x13W[Ps\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x87\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x86\x16\x10`\0\x14a\x16\xF8Wd\x01\0\x02v\xA4\x95[`@Q\x91\x82\x91` \x83\x01`@\x90R``\x83\x01a\x14\xC6\x91a\x1E\xF1V[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`@\x83\x01R\x03\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x81\x01\x82Ra\x15\x12\x90\x82a\x1B-V[`@Q\x95\x86\x93\x84\x93\x7F\x12\x8A\xCB\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\x04\x85\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x89\x16s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x88\x16\x10`$\x85\x01R`D\x84\x01Rs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`d\x83\x01R`\x84\x82\x01`\xA0\x90R`\xA4\x82\x01a\x15\xC1\x91a\x1E\xF1V[\x03\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x91\x81Z`@\x94`\0\x91\xF1\x92\x83\x15a\x04\x0EW`\0\x92`\0\x94a\x16\xB7W[P\x91`j\x93\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80a\x16&\x95\x16\x91\x16\x10`\0\x14a\x16\xB0WPa\x1B\xEFV[\x94\x10a\x16=W0\x90a\x167\x84a\"\xCDV[\x90a\x13\xA3V[P\x90\x80a\x16K\x91Q\x90a\"\xBEV[\x91\x80\x15a\x16\x7FWs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF``\x93\x81`@Q\x94\x16\x84R\x16` \x83\x01R`@\x82\x01R\xF3[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`0`\x04\x82\x01R\xFD[\x90Pa\x1B\xEFV[\x93P\x90\x91P`@\x83=`@\x11a\x16\xF0W[\x81a\x16\xD5`@\x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02W\x82Q` \x90\x93\x01Q\x92\x91\x90a\x16&a\x15\xF5V[=\x91Pa\x16\xC8V[s\xFF\xFD\x89c\xEF\xD1\xFCjPd\x88I]\x95\x1DRc\x98\x8D%\x95a\x14\xABV[a\x17-\x91\x94P` =` \x11a\x04rWa\x04^\x81\x83a\x1B-V[\x92\x8Ba\x14lV[\x85a\x13\xE4V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`2`\x04\x82\x01R\xFD[\x93Pa\x17w0\x83a!\xA9V[\x93a\x13\xA1V[`\x02\x81\x03a\x17\xAFWPP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000\x91a\x13\x9BV[a\x17\xB8\x90a!\xC6V[\x15a\x17\xE6WP\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x003\x91a\x13\x9BV[\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x91a\x13\x9BV[`\x02\x03a\x18\x1BW0a\x13lV[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`&`\x04\x82\x01R\xFD[4a\x04\x02W` \x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFC6\x01\x12a\x04\x02Ws\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x18\x98a\x1A\xD2V[a\x18\xA0a\x1C\xE5V[P` a\x18\xABa\x1C\xE5V[\x91c\xFF\xFF\xFF\xFFB\x16\x82\x84\x01R\x83a\xFF\xFF\x80\x80c\xFF\xFF\xFF\xFFa\x19ma\x19_`@Q\x7F8P\xC7\xBD\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8A\x82\x01R`\x04\x81Ra\x18\xFD\x81a\x1A\xF5V[`@Q\x90a\x19\n\x82a\x1B\x11V[`%\x82R\x7FAddress: low-level static call f\x8B\x83\x01R\x7Failed\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`@\x83\x01R\x89a$\x1EV[\x88\x80\x82Q\x83\x01\x01\x91\x01a\x1D\x83V[P\x98\x94\x98\x97\x92\x95\x90\x91\x93\x97\x16`@\x8D\x01R\x16`\xE0\x8B\x01R\x16`\xA0\x89\x01R\x16`\x80\x87\x01R`\x02\x0B``\x86\x01R\x16\x83R`\x04`@Q\x80\x95\x81\x93\x7F\x1Ahe\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R\x16Z\xFA\x91\x82\x15a\x04\x0EW`\0\x92a\x1A\x83W[Po\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x01\0\x92\x16`\xC0\x82\x01Ra\xFF\xFF`\xE0`@Q\x92s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81Q\x16\x84Rc\xFF\xFF\xFF\xFF` \x82\x01Q\x16` \x85\x01Rc\xFF\xFF\xFF\xFF`@\x82\x01Q\x16`@\x85\x01R``\x81\x01Q`\x02\x0B``\x85\x01R\x82`\x80\x82\x01Q\x16`\x80\x85\x01R\x82`\xA0\x82\x01Q\x16`\xA0\x85\x01Ro\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\xC0\x82\x01Q\x16`\xC0\x85\x01R\x01Q\x16`\xE0\x82\x01R\xF3[\x91P` \x82=` \x11a\x1A\xCAW[\x81a\x1A\x9E` \x93\x83a\x1B-V[\x81\x01\x03\x12a\x04\x02Wo\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFFa\x1A\xC3a\x01\0\x93a\x1CpV[\x92Pa\x19\xD9V[=\x91Pa\x1A\x91V[`\x045\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[`@\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[``\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[\x90`\x1F\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x91\x01\x16\x81\x01\x90\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@RV[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`\x1F\x01\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0\x16` \x01\x90V[\x81`\x1F\x82\x01\x12\x15a\x04\x02W\x805\x90a\x1B\xBF\x82a\x1BnV[\x92a\x1B\xCD`@Q\x94\x85a\x1B-V[\x82\x84R` \x83\x83\x01\x01\x11a\x04\x02W\x81`\0\x92` \x80\x93\x01\x83\x86\x017\x83\x01\x01R\x90V[\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x14a\x08\xA5W`\0\x03\x90V[`@Q\x90`\xC0\x82\x01\x82\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@R```\xA0\x83`\0\x81R`\0` \x82\x01R`\0`@\x82\x01R`\0\x83\x82\x01R`\0`\x80\x82\x01R\x01RV[Q\x90\x81`\x02\x0B\x82\x03a\x04\x02WV[Q\x90o\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[\x90\x81` \x91\x03\x12a\x04\x02WQs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x16\x81\x03a\x04\x02W\x90V[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`\x05\x1B` \x01\x90V[\x80Q\x82\x10\x15a\x11qW` \x91`\x05\x1B\x01\x01\x90V[`@Q\x90a\x01\0\x82\x01\x82\x81\x10g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x11\x17a\r\x8AW`@R\x81`\xE0`\0\x91\x82\x81R\x82` \x82\x01R\x82`@\x82\x01R\x82``\x82\x01R\x82`\x80\x82\x01R\x82`\xA0\x82\x01R\x82`\xC0\x82\x01R\x01RV[Q\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90a\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90c\xFF\xFF\xFF\xFF\x82\x16\x82\x03a\x04\x02WV[Q\x90\x81\x15\x15\x82\x03a\x04\x02WV[\x90\x81`\xE0\x91\x03\x12a\x04\x02Wa\x1D\x97\x81a\x1D5V[\x91a\x1D\xA4` \x83\x01a\x1CbV[\x91a\x1D\xB1`@\x82\x01a\x1DVV[\x91a\x1D\xBE``\x83\x01a\x1DVV[\x91a\x1D\xCB`\x80\x82\x01a\x1DVV[\x91a\x1D\xE4`\xC0a\x1D\xDD`\xA0\x85\x01a\x1DeV[\x93\x01a\x1DvV[\x90V[\x90`\x02\x0B\x90`\x02\x0B\x02\x90\x81`\x02\x0B\x91\x82\x03a\x08\xA5WV[\x90`\x02\x0B\x90`\x02\x0B\x03\x90b\x7F\xFF\xFF\x82\x13\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0\x83\x12\x17a\x08\xA5WV[`\x02\x0B\x90`\x02\x0B\x90\x81\x15a\x1E\x95W\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x82\x14\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\0\0\x82\x14\x16a\x08\xA5W\x05\x90V[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x12`\x04R`$`\0\xFD[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x14a\x08\xA5W`\x01\x01\x90V[\x91\x90\x82Q\x92\x83\x82R`\0[\x84\x81\x10a\x1F;WPP\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xE0`\x1F\x84`\0` \x80\x96\x97\x86\x01\x01R\x01\x16\x01\x01\x90V[` \x81\x83\x01\x81\x01Q\x84\x83\x01\x82\x01R\x01a\x1E\xFCV[\x92\x91\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x160\x03a\x1F}WPPa\x1F{\x92a\x1F\x91V[V[a\x1F\x8Aa\x1F{\x95\x94a#\xD3V[\x16\x92a eV[\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x900\x82\x14a `Wa\x1F\xB9\x81a!\xC6V[\x15a\x1F\xDDWP`\0\x80\x80\x93Z\x93Z\xF1\x15a\x1F\xCFWV[c\xB1-\x13\xEB`\0R`\x04`\x1C\xFD[\x82` \x92\x7F\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x10\x95\x14a NW[`\x14R`4R`D`\0\x93\x84\x80\x93o\xA9\x05\x9C\xBB\0\0\0\0\0\0\0\0\0\0\0\0\x82RZ\xF1=\x15`\x01\x83Q\x14\x17\x16\x15a AW`4RV[c\x90\xB8\xEC\x18\x90R`\x04`\x1C\xFD[\x90Pa Z0\x83a!zV[\x90a \x0BV[PPPV[\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x81\x16\x91\x16\x81\x81\x14a \x96Wa \x90\x83a!\xC6V[\x15a \x9CW[PPPPV[a \xA8a \xAE\x94a#\xD3V[\x92a \xB7V[8\x80\x80\x80a \x96V[\x91s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x80\x92\x16\x92\x16\x82\x81\x14a!sW\x81\x7Fj+3\x91\\\x87\xEB\xBD.zGR\x0F\xE4\xAA\xA6\xF0\xE1\x8E\xF6\xBD\xEB\xD6I\x15\xD7\xAE\xCE\xD0\x8DD\x81T\x16\x93\x84;\x15a\x04\x02W`\0\x94\x83\x86\x92`\x84\x95`@Q\x99\x8A\x98\x89\x97\x7F6\xC7\x85\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x89R`\x04\x89\x01R`$\x88\x01R\x16`D\x86\x01R\x16`d\x84\x01RZ\xF1\x80\x15a\x04\x0EWa!_WPV[g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11a\r\x8AW`@RV[PPPPPV[`$`\x10` \x93\x92\x84\x93`\x14Rop\xA0\x821\0\0\0\0\0\0\0\0\0\0\0\0`\0RZ\xFA`\x1F=\x11\x16` Q\x02\x90V[a!\xB2\x81a!\xC6V[\x15a!\xBCWP1\x90V[\x90a\x1D\xE4\x91a!zV[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16s\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\xEE\x81\x14\x90\x81\x15a\"\x0BW[\x81\x15a\"\x05WP\x90V[\x90P\x15\x90V[a\x10\x10\x81\x14\x91Pa!\xFBV[\x90\x81Qa\"$\x81\x84a\"\xAFV[\x92`(\x82\x10a\"~W`(\x81\x01Q\x91`+\x81\x10a\"MWa\"J\x90`+\x83\x01Q\x92a\"\xBEV[\x92V[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`5`\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`8`\x04\x82\x01R\xFD[\x90`\x14\x11a\"~W`\x14\x01Q\x90V[\x90`?\x11a\"~W`?\x01Q\x90V[\x80Q\x90\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xD5\x91\x82\x81\x01\x92\x81\x84\x11a\x08\xA5W\x83\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF4\x83\x01\x10a#\xA2W`+\x82\x10a#\xA2W\x81\x83Q\x10a\x17:W`+\x82\x14a#qW`\x1F\x84\x16\x80\x15`\x05\x1B\x01\x83\x01\x91\x82\x01\x01`+\x82\x01\x91[\x81\x81\x10a#aWPPPRV[\x82Q\x81R` \x92\x83\x01\x92\x01a#TV[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`4`\x04\x82\x01R\xFD[`$`@Q\x7F\x94\x8A\xC5\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`3`\x04\x82\x01R\xFD[s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x90\x81\x81\x11a#\xF4W\x16\x90V[`\x04`@Q\x7F\xC4\xBD\x89\xA9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R\xFD[`\0\x80a\x1D\xE4\x94\x93` \x81Q\x91\x01\x84Z\xFA=\x15a$]W=\x91a$@\x83a\x1BnV[\x92a$N`@Q\x94\x85a\x1B-V[\x83R=`\0` \x85\x01>a$aV[``\x91[\x91\x92\x90\x15a$\xDCWP\x81Q\x15a$uWP\x90V[;\x15a$~W\x90V[`d`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x1D`$\x82\x01R\x7FAddress: call to non-contract\0\0\0`D\x82\x01R\xFD[\x82Q\x90\x91P\x15a$\xEFWP\x80Q\x90` \x01\xFD[a%-\x90`@Q\x91\x82\x91\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83R` `\x04\x84\x01R`$\x83\x01\x90a\x1E\xF1V[\x03\x90\xFD\xFE\xA2dipfsX\"\x12 \x13\xC7\xA03\xB0w\xE6\xEA\xAE\xFCe\xD7}\xF0/c\x9E\xDD\xED\xACp6\x80!\x87\xB4\xC0[\xEA\x91\xD4\xD9dsolcC\0\x08\x13\x003";
    /// The deployed bytecode of the contract.
    pub static UNIV3FACET_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct UniV3Facet<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for UniV3Facet<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for UniV3Facet<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for UniV3Facet<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for UniV3Facet<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(UniV3Facet)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> UniV3Facet<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    UNIV3FACET_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                UNIV3FACET_ABI.clone(),
                UNIV3FACET_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `uniV3GetTicks` (0xacce1925) function
        pub fn uni_v3_get_ticks(
            &self,
            pool: ::ethers::core::types::Address,
            tick_range: i32,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::vec::Vec<Tick>> {
            self.0
                .method_hash([172, 206, 25, 37], (pool, tick_range))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `uniV3PoolParams` (0x8fc1fe11) function
        pub fn uni_v3_pool_params(
            &self,
            pool: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, UniV3PoolParamsResponse> {
            self.0
                .method_hash([143, 193, 254, 17], pool)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `uniV3PoolState` (0x3f12c932) function
        pub fn uni_v3_pool_state(
            &self,
            pool: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, UniV3PoolStateResponse> {
            self.0
                .method_hash([63, 18, 201, 50], pool)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `uniV3SwapExactInput` (0x7336faf9) function
        pub fn uni_v3_swap_exact_input(
            &self,
            amount_in: ::ethers::core::types::U256,
            path: ::ethers::core::types::Bytes,
            recipient: ::ethers::core::types::Address,
            payer: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            (
                ::ethers::core::types::Address,
                ::ethers::core::types::Address,
                ::ethers::core::types::U256,
            ),
        > {
            self.0
                .method_hash([115, 54, 250, 249], (amount_in, path, recipient, payer))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `uniswapV3SwapCallback` (0xfa461e33) function
        pub fn uniswap_v3_swap_callback(
            &self,
            amount_0_delta: ::ethers::core::types::I256,
            amount_1_delta: ::ethers::core::types::I256,
            data: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([250, 70, 30, 51], (amount_0_delta, amount_1_delta, data))
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for UniV3Facet<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `GenericError` with signature `GenericError(uint256)` and selector `0x948ac503`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "GenericError", abi = "GenericError(uint256)")]
    pub struct GenericError {
        pub error_code: ::ethers::core::types::U256,
    }
    ///Custom Error type `UnsafeCast` with signature `UnsafeCast()` and selector `0xc4bd89a9`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "UnsafeCast", abi = "UnsafeCast()")]
    pub struct UnsafeCast;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum UniV3FacetErrors {
        GenericError(GenericError),
        UnsafeCast(UnsafeCast),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for UniV3FacetErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <GenericError as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GenericError(decoded));
            }
            if let Ok(decoded)
                = <UnsafeCast as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UnsafeCast(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for UniV3FacetErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::GenericError(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UnsafeCast(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for UniV3FacetErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <GenericError as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <UnsafeCast as ::ethers::contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for UniV3FacetErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::GenericError(element) => ::core::fmt::Display::fmt(element, f),
                Self::UnsafeCast(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for UniV3FacetErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<GenericError> for UniV3FacetErrors {
        fn from(value: GenericError) -> Self {
            Self::GenericError(value)
        }
    }
    impl ::core::convert::From<UnsafeCast> for UniV3FacetErrors {
        fn from(value: UnsafeCast) -> Self {
            Self::UnsafeCast(value)
        }
    }
    ///Container type for all input parameters for the `uniV3GetTicks` function with signature `uniV3GetTicks(address,int24)` and selector `0xacce1925`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "uniV3GetTicks", abi = "uniV3GetTicks(address,int24)")]
    pub struct UniV3GetTicksCall {
        pub pool: ::ethers::core::types::Address,
        pub tick_range: i32,
    }
    ///Container type for all input parameters for the `uniV3PoolParams` function with signature `uniV3PoolParams(address)` and selector `0x8fc1fe11`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "uniV3PoolParams", abi = "uniV3PoolParams(address)")]
    pub struct UniV3PoolParamsCall {
        pub pool: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `uniV3PoolState` function with signature `uniV3PoolState(address)` and selector `0x3f12c932`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "uniV3PoolState", abi = "uniV3PoolState(address)")]
    pub struct UniV3PoolStateCall {
        pub pool: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `uniV3SwapExactInput` function with signature `uniV3SwapExactInput(uint256,bytes,address,address)` and selector `0x7336faf9`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "uniV3SwapExactInput",
        abi = "uniV3SwapExactInput(uint256,bytes,address,address)"
    )]
    pub struct UniV3SwapExactInputCall {
        pub amount_in: ::ethers::core::types::U256,
        pub path: ::ethers::core::types::Bytes,
        pub recipient: ::ethers::core::types::Address,
        pub payer: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `uniswapV3SwapCallback` function with signature `uniswapV3SwapCallback(int256,int256,bytes)` and selector `0xfa461e33`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "uniswapV3SwapCallback",
        abi = "uniswapV3SwapCallback(int256,int256,bytes)"
    )]
    pub struct UniswapV3SwapCallbackCall {
        pub amount_0_delta: ::ethers::core::types::I256,
        pub amount_1_delta: ::ethers::core::types::I256,
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum UniV3FacetCalls {
        UniV3GetTicks(UniV3GetTicksCall),
        UniV3PoolParams(UniV3PoolParamsCall),
        UniV3PoolState(UniV3PoolStateCall),
        UniV3SwapExactInput(UniV3SwapExactInputCall),
        UniswapV3SwapCallback(UniswapV3SwapCallbackCall),
    }
    impl ::ethers::core::abi::AbiDecode for UniV3FacetCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <UniV3GetTicksCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UniV3GetTicks(decoded));
            }
            if let Ok(decoded)
                = <UniV3PoolParamsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UniV3PoolParams(decoded));
            }
            if let Ok(decoded)
                = <UniV3PoolStateCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UniV3PoolState(decoded));
            }
            if let Ok(decoded)
                = <UniV3SwapExactInputCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::UniV3SwapExactInput(decoded));
            }
            if let Ok(decoded)
                = <UniswapV3SwapCallbackCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::UniswapV3SwapCallback(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for UniV3FacetCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::UniV3GetTicks(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UniV3PoolParams(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UniV3PoolState(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UniV3SwapExactInput(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UniswapV3SwapCallback(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for UniV3FacetCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::UniV3GetTicks(element) => ::core::fmt::Display::fmt(element, f),
                Self::UniV3PoolParams(element) => ::core::fmt::Display::fmt(element, f),
                Self::UniV3PoolState(element) => ::core::fmt::Display::fmt(element, f),
                Self::UniV3SwapExactInput(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::UniswapV3SwapCallback(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<UniV3GetTicksCall> for UniV3FacetCalls {
        fn from(value: UniV3GetTicksCall) -> Self {
            Self::UniV3GetTicks(value)
        }
    }
    impl ::core::convert::From<UniV3PoolParamsCall> for UniV3FacetCalls {
        fn from(value: UniV3PoolParamsCall) -> Self {
            Self::UniV3PoolParams(value)
        }
    }
    impl ::core::convert::From<UniV3PoolStateCall> for UniV3FacetCalls {
        fn from(value: UniV3PoolStateCall) -> Self {
            Self::UniV3PoolState(value)
        }
    }
    impl ::core::convert::From<UniV3SwapExactInputCall> for UniV3FacetCalls {
        fn from(value: UniV3SwapExactInputCall) -> Self {
            Self::UniV3SwapExactInput(value)
        }
    }
    impl ::core::convert::From<UniswapV3SwapCallbackCall> for UniV3FacetCalls {
        fn from(value: UniswapV3SwapCallbackCall) -> Self {
            Self::UniswapV3SwapCallback(value)
        }
    }
    ///Container type for all return fields from the `uniV3GetTicks` function with signature `uniV3GetTicks(address,int24)` and selector `0xacce1925`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3GetTicksReturn {
        pub ticks: ::std::vec::Vec<Tick>,
    }
    ///Container type for all return fields from the `uniV3PoolParams` function with signature `uniV3PoolParams(address)` and selector `0x8fc1fe11`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3PoolParamsReturn(pub UniV3PoolParamsResponse);
    ///Container type for all return fields from the `uniV3PoolState` function with signature `uniV3PoolState(address)` and selector `0x3f12c932`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3PoolStateReturn(pub UniV3PoolStateResponse);
    ///Container type for all return fields from the `uniV3SwapExactInput` function with signature `uniV3SwapExactInput(uint256,bytes,address,address)` and selector `0x7336faf9`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3SwapExactInputReturn {
        pub input_token: ::ethers::core::types::Address,
        pub output_token: ::ethers::core::types::Address,
        pub amount_out: ::ethers::core::types::U256,
    }
    ///`Tick(uint128,int128,uint256,uint256,int24)`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct Tick {
        pub liquidity_gross: u128,
        pub liquidity_net: i128,
        pub fee_growth_outside_0x128: ::ethers::core::types::U256,
        pub fee_growth_outside_1x128: ::ethers::core::types::U256,
        pub tick: i32,
    }
    ///`UniV3PoolParamsResponse(address,int24,uint24,uint128,address,address[])`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3PoolParamsResponse {
        pub pool: ::ethers::core::types::Address,
        pub tick_spacing: i32,
        pub fee: u32,
        pub max_liquidity_per_tick: u128,
        pub factory: ::ethers::core::types::Address,
        pub token_list: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///`UniV3PoolStateResponse(uint160,uint32,uint32,int24,uint16,uint16,uint128,uint16)`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct UniV3PoolStateResponse {
        pub sqrt_price_x96: ::ethers::core::types::U256,
        pub block_timestamp: u32,
        pub fee_protocol: u32,
        pub tick: i32,
        pub observation_index: u16,
        pub observation_cardinality: u16,
        pub liquidity: u128,
        pub observation_cardinality_next: u16,
    }
}
